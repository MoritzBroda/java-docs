"use strict";(self.webpackChunkjava_docs=self.webpackChunkjava_docs||[]).push([["4121"],{20801:function(e,t,n){n.r(t),n.d(t,{metadata:()=>i,contentTitle:()=>a,default:()=>u,assets:()=>d,toc:()=>c,frontMatter:()=>r});var i=JSON.parse('{"id":"documentation/object","title":"Die Mutter aller Klassen","description":"","source":"@site/docs/documentation/object.md","sourceDirName":"documentation","slug":"/documentation/object","permalink":"/java-docs/production/documentation/object","draft":false,"unlisted":false,"editUrl":"https://github.com/jappuccini/java-docs/tree/main/docs/documentation/object.md","tags":[{"inline":true,"label":"object","permalink":"/java-docs/production/tags/object"}],"version":"current","sidebarPosition":190,"frontMatter":{"title":"Die Mutter aller Klassen","description":"","sidebar_position":190,"tags":["object"]},"sidebar":"documentationSidebar","previous":{"title":"(Dynamische) Polymorphie","permalink":"/java-docs/production/documentation/polymorphy"},"next":{"title":"Abstrakte und finale Klassen und Methoden","permalink":"/java-docs/production/documentation/abstract-and-final"}}'),o=n("85893"),s=n("50065");let r={title:"Die Mutter aller Klassen",description:"",sidebar_position:190,tags:["object"]},a=void 0,d={},c=[];function l(e){let t={admonition:"admonition",code:"code",em:"em",li:"li",p:"p",ul:"ul",...(0,s.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["Alle Klassen in Java sind letztlich Unterklassen der Klasse ",(0,o.jsx)(t.code,{children:"Object"}),". Daher wird\ndiese auch als die Mutter aller Klassen bezeichnet. Die Klasse vererbt ihren\nUnterklassen wichtige Methoden, die jede Unterklasse \xfcberschreiben sollte:"]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["Die Methode ",(0,o.jsx)(t.code,{children:"boolean equals(object: Object)"})," pr\xfcft zwei Objekte auf Gleichheit"]}),"\n",(0,o.jsxs)(t.li,{children:["Die Methode ",(0,o.jsx)(t.code,{children:"int hashCode()"})," liefert den Hashcode des aktuellen Objektes\nzur\xfcck"]}),"\n",(0,o.jsxs)(t.li,{children:["Die Methode ",(0,o.jsx)(t.code,{children:"String toString()"})," liefert eine eindeutige Kennung des Objektes\nin der Form ",(0,o.jsx)(t.em,{children:"[Vollst\xe4ndiger Klassenname]"}),"@",(0,o.jsx)(t.em,{children:"[Adresse des Objektes im\nHauptspeicher in hexadezimaler Notation]"})," zur\xfcck"]}),"\n"]}),"\n",(0,o.jsx)(t.admonition,{title:"Hinweis",type:"note",children:(0,o.jsx)(t.p,{children:"Zwei Objekte sind gleich, wenn all ihre Attribute gleich sind."})}),"\n",(0,o.jsx)(t.admonition,{title:"Hinweis",type:"note",children:(0,o.jsxs)(t.p,{children:["Wird den print-Methoden des Ausgabestroms ",(0,o.jsx)(t.code,{children:"System.out"})," eine Objektreferenz\n\xfcbergeben, wird implizit die Methode ",(0,o.jsx)(t.code,{children:"String toString()"})," des jeweiligen Objektes\naufgerufen."]})})]})}function u(e={}){let{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},50065:function(e,t,n){n.d(t,{Z:function(){return a},a:function(){return r}});var i=n(67294);let o={},s=i.createContext(o);function r(e){let t=i.useContext(s);return i.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);